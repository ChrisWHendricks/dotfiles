#!/bin/bash
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.
#
# CREDIT: https://github.com/holman/dotfiles/blob/master/bin/dot

set -e

# Logging functions to make messages pretty
info() {
    printf "\r  [ \033[00;34m..\033[0m ] $1\n"
    echo $1 >>$DOTFILES_DIR/install.log
}

user() {
    printf "\r  [ \033[0;33m??\033[0m ] $1\n"
    echo $1 >>$DOTFILES_DIR/install.log
}

success() {
    printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
    echo $1 >>$DOTFILES_DIR/install.log
}

fail() {
    printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
    echo $1 >>$DOTFILES_DIR/install.log
    echo ''
    exit
}

parentDirectory="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"
dotfilesDirectory="$(cd "$(dirname "$parentDirectory")" && pwd -P)"

export ZSH=$HOME/.dotfiles

displayUsageAndExit() {
	echo "dot -- dotfiles management"
	echo ""
	echo "Usage: dot [options]"
	echo ""
	echo "Options:"
	echo "  --config      	Configures file links, git, and custom zsh themes"    
	echo "  --homebrew      Install or update Homebrew, an application and package manager"
	echo "  --set-defaults  Set OS specific defaults. (Only works on Macs right now)"
	echo "  --apps          Install/Update applications (Requires Homebrew to be installed)"
	echo "  -e, --edit      Open dotfiles directory for editing"
	echo "  -h, --help      Show this help message and exit"
	echo ""
	echo "If no options are provided, usage information is displayed."
	exit
}

# Function to run bootstrap script
run_bootstrap() {
	echo "› Running bootstrap script"
	$ZSH/script/bootstrap
}

# Function to install/update Homebrew
install_homebrew() {
	echo "› Installing/Updating Homebrew"
	if [ "$(uname -s)" = "Darwin" ] || [ "$(expr substr $(uname -s) 1 5)" = "Linux" ]; then
		$ZSH/homebrew/install.sh
		brew update
	else
		echo "› Skipping Homebrew installation (unsupported OS)"
	fi
}

# Function to set OS defaults
set_defaults() {
	echo "› Setting OS defaults"
	if [ "$(uname -s)" = "Darwin" ]; then
		$ZSH/macos/set-defaults.sh
	else
		echo "› Skipping defaults (non-macOS system detected)"
	fi
}

# Function to install applications
install_apps() {
	echo ''
	echo '⚡️ Installing OS Specific Applications.'
	success "OS is ${uname -s}"

	if $ZSH/script/install | while read -r data; do info "$data"; done; then
		success "dependencies installed"
	else
		fail "error installing dependencies"
	fi
	echo "› Installing/Updating applications"
	
}

# If no arguments provided, show usage
if [ $# -eq 0 ]; then
	displayUsageAndExit
fi

# Process arguments
while test $# -gt 0; do
	case "$1" in
	"--config")
		run_bootstrap
		;;
	"--homebrew")
		install_homebrew
		;;
	"--set-defaults")
		set_defaults
		;;
	"--apps")
		install_apps
		;;
	"-e" | "--edit")
		#code --wait "$dotfilesDirectory"
		$EDITOR "$dotfilesDirectory"
		exit
		;;
	"-h" | "--help")
		displayUsageAndExit
		;;
	*)
		echo "Invalid option: $1"
		displayUsageAndExit
		;;
	esac
	shift
done
